#include <stdio.h>
#include <string.h>

#define CHAR_RANGE 256 // Total possible ASCII characters

int longestUniqueSubstring(char s[]) {
    int n = strlen(s);
    int lastIndex[CHAR_RANGE]; // Stores last index of each character
    for (int i = 0; i < CHAR_RANGE; i++) lastIndex[i] = -1;

    int maxLength = 0;
    int start = 0; // Start index of current substring

    for (int i = 0; i < n; i++) {
        char ch = s[i];
        if (lastIndex[ch] >= start) {
            // Character repeated, move start
            start = lastIndex[ch] + 1;
        }
        lastIndex[ch] = i;
        int currentLength = i - start + 1;
        if (currentLength > maxLength) maxLength = currentLength;
    }

    return maxLength;
}

int main() {
    char s[1000];
    printf("Enter a string: ");
    scanf("%s", s);

    int length = longestUniqueSubstring(s);
    printf("Length of the longest substring without repeating characters: %d\n", length);

    return 0;
}
